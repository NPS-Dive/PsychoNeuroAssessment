@page "/userprofile"
@using Microsoft.AspNetCore.Authorization
@using PNA.BlazorWasm.Models
@using PNA.BlazorWasm.Services
@attribute [Authorize(Policy = "UserOrAdmin")]
@inject IAuthService AuthService
@inject NavigationManager Navigation

<h3>User Profile</h3>

@if (user == null)
    {
    <p>Loading...</p>
    }
else
    {
    <EditForm Model="user" OnValidSubmit="HandleUpdate">
        <DataAnnotationsValidator />
        <div class="form-group">
            <label>Username</label>
            <InputText class="form-control" @bind-Value="user.UserName" disabled />
        </div>
        <div class="form-group">
            <label>Email</label>
            <InputText class="form-control" @bind-Value="user.Email" disabled />
        </div>
        <div class="form-group">
            <label>First Name</label>
            <InputText class="form-control" @bind-Value="user.FirstName" />
        </div>
        <div class="form-group">
            <label>Last Name</label>
            <InputText class="form-control" @bind-Value="user.LastName" />
        </div>
        <div class="form-group">
            <label>Roles</label>
            <InputText class="form-control" value="@string.Join(", ", user.Roles)" disabled />
        </div>
        <button type="submit" class="btn btn-primary">Update</button>
    </EditForm>
    <button class="btn btn-secondary" @onclick="Logout">Logout</button>
    }

@code {
    private UserDto? user;

    protected override async Task OnInitializedAsync ()
        {
        user = await AuthService.GetProfileAsync();
        }

    private async Task HandleUpdate ()
        {
        await AuthService.UpdateProfileAsync(user!.FirstName, user!.LastName);
        StateHasChanged();
        }

    private async Task Logout ()
        {
        await AuthService.LogoutAsync();
        Navigation.NavigateTo("/login");
        }
}